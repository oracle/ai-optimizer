# Workflow for deploying static documentation
name: Deploy Documentation/Helm to Pages

on:
  push:
    branches:
      - main
    # Limit runs to only when docs/helm change
    paths:
      - "docs/**"
      - "helm/**"
      - ".github/workflows/documentation.yml"

  # Allows running this workflow manually
  workflow_dispatch:

# Permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.150.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download Hugo Theme
        run: |
          mkdir -p docs/themes/relearn \
          && curl -L $(curl -s https://api.github.com/repos/McShelby/hugo-theme-relearn/releases/latest \
          | grep "tarball_url" | cut -d '"' -f 4) \
          | tar -xz -C docs/themes/relearn --strip-components=1 --exclude='*/exampleSite'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Europe/London
        run: |
          hugo \
            --gc \
            --minify \
            --source docs \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Package Tags Helm chart
        run: |
          TAGS=$(git tag --sort=creatordate)
          for TAG in $TAGS; do
            echo "Processing tag: $TAG"

            # Create a temporary worktree to avoid changing the current working directory
            WORKDIR=$(mktemp -d)
            git worktree add "$WORKDIR" "$TAG"

            # Extract version from tag (remove 'v' prefix if present)
            if [[ $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              VERSION=${TAG#v}
              echo "Packaging Helm chart with version: $VERSION"
              helm package "$WORKDIR/helm" -d docs/public/helm --version "$VERSION" --app-version "$VERSION" --debug
            else
              echo "Tag $TAG does not match version format (vMAJOR.MINOR.PATCH), packaging without version override"
              helm package "$WORKDIR/helm" -d docs/public/helm --debug
            fi

            # Clean up
            git worktree remove "$WORKDIR"
          done          

      - name: Package Main Helm chart
        run: |
          mkdir -p docs/public/helm
          helm package helm -d docs/public/helm --debug

      - name: Index Helm charts
        run: helm repo index docs/public/helm --url "${{ steps.pages.outputs.base_url }}/helm"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
