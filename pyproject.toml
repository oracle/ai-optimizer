[build-system]
requires = ["setuptools>=61.0.0", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-optimizer"
dynamic = ["version"]
description = "Oracle AI Optimizer and Toolkit"
requires-python = ">=3.11"
license =  "UPL-1.0"
authors = [
    {name = "Oracle", email = "obaas_ww@oracle.com"}
]

# Common dependencies that are always needed
dependencies = [
    "langchain-core==0.3.76",
    "httpx==0.28.1",
    "oracledb~=3.1",
    "plotly==6.3.0",
]

[project.optional-dependencies]
# Server component dependencies
server = [
    "bokeh==3.8.0",
    "evaluate==0.4.6",
    "faiss-cpu==1.12.0",
    "fastapi==0.117.1",
    "fastmcp==2.12.3",
    "giskard==2.18.0",
    "langchain-anthropic==0.3.20",
    "langchain-aws==0.2.33",
    "langchain-cohere==0.4.6",
    "langchain-community==0.3.29",
    "langchain-deepseek==0.1.4",
    "langchain-google-genai==2.1.12",
    "langchain-google-vertexai==2.1.2",
    "langchain-groq==0.3.8",
    "langchain-huggingface==0.3.1",
    "langchain-mistralai==0.2.12",
    "langchain-mcp-adapters==0.1.10",
    "langchain-ollama==0.3.8",
    "langchain-openai==0.3.33",
    "langchain-perplexity==0.1.2",
    "langchain-xai==0.2.5",
    "langgraph==0.6.7",
    "litellm==1.77.3",
    "llama-index==0.14.2",
    "lxml==6.0.2",
    "matplotlib==3.10.6",
    "oci~=2.0",
    "psutil==7.1.0",
    "python-multipart==0.0.20",
    "torch==2.8.0",
    "umap-learn==0.5.9.post2",
    "uvicorn==0.36.0",
]

# GUI component dependencies
client = [
    "streamlit==1.50.0",
]

# Test dependencies
test = [
    "pylint",
    "pytest",
    "pytest-asyncio",
    "docker",
]

# All-in-one installation (server + client)
all = [
    "ai-optimizer[server]",
    "ai-optimizer[client]",
]

# All-in-one with tests
all-test = [
    "ai-optimizer[server]",
    "ai-optimizer[client]",
    "ai-optimizer[test]",
]

[tool.setuptools]
packages = ["src.server", "src.client", "src.common"]

[tool.setuptools_scm]
root = "."
fallback_version = "0.0.0"