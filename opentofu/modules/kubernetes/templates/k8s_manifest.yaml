# Copyright (c) 2024, 2025, Oracle and/or its affiliates.
# All rights reserved. The Universal Permissive License (UPL), Version 1.0 as shown at http://oss.oracle.com/licenses/upl
# spell-checker: disable

---
apiVersion: v1
kind: Namespace
metadata:
  name: ${label}
---
apiVersion: v1
kind: Secret
metadata:
  name: ${label}-api-key
  namespace: ${label}
type: Opaque
stringData:
  apiKey: ${api_key}
---
# Secret containing non-privileged DB User details.
# Used for application connectivity to database.
# User is created during cfgmgt init-containter
apiVersion: v1
kind: Secret
metadata:
  name: ${adb_name}-db-authn
  namespace: ${label}
type: Opaque
stringData:
  username: AI_OPTIMIZER
  password: ${adb_password}
  service: ${adb_service}
---
# Secret containing privileged DB User details.
# Used to create user defined in -db-authn in init-container
apiVersion: v1
kind: Secret
metadata:
  name: ${adb_name}-db-priv-authn
  namespace: ${label}
type: Opaque
stringData:
  password: ${adb_password}
---
apiVersion: "ingress.oraclecloud.com/v1beta1"
kind: IngressClassParameters
metadata:
  name: native-ic-params
  namespace: ${label}
spec:
  compartmentId: ${compartment_ocid}
  subnetId: ${lb_subnet_ocid}
  loadBalancerName: "${label}-lb"
  reservedPublicAddressId: ${lb_ip_ocid}
  isPrivate: false
  maxBandwidthMbps: ${lb_max_shape}
  minBandwidthMbps: ${lb_min_shape}
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: native-ic
  namespace: ${label}
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    oci-native-ingress.oraclecloud.com/network-security-group-ids: ${lb_nsgs}
    oci-native-ingress.oraclecloud.com/id: ${lb_ocid}
    oci-native-ingress.oraclecloud.com/delete-protection-enabled: "true"
spec:
  controller: oci.oraclecloud.com/native-ingress-controller
  parameters:
    scope: Namespace
    namespace: ${label}
    apiGroup: ingress.oraclecloud.com
    kind: IngressClassParameters
    name: native-ic-params
---
# Builds and pushes application images to container registry.
# Uses instance principles.
apiVersion: batch/v1
kind: Job
metadata:
  name: buildkit
  namespace: ${label}
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      initContainers:
        - name: prepare-source-code
          image: docker.io/alpine:latest
          command:
            - sh
            - -c
            - |
              wget -qO- https://github.com/oracle/ai-optimizer/releases/latest/download/ai-optimizer-src.tar.gz \
                | tar -xz -C /workspace	  	
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
        - name: init-ocir-login
          image: ghcr.io/oracle/oci-cli:latest
          command:
            - sh
            - -c
            - |
              export TOKEN=$(oci raw-request --http-method GET --target-uri https://${repository_host}/20180419/docker/token | jq -r '.data.token')
              mkdir -p /docker-config
              echo "{\"auths\":{\"${repository_host}\":{\"auth\":\"$(echo -n "BEARER_TOKEN:$TOKEN" | base64 -w0)\"}}}" > /docker-config/config.json
              chown 1000:1000 /docker-config/config.json
              cat /docker-config/config.json
          env:
            - name: OCI_CLI_AUTH
              value: instance_principal
          volumeMounts:
            - name: docker-auth
              mountPath: /docker-config
      containers:
        - name: buildkit-client
          image: docker.io/moby/buildkit:master-rootless
          env:
            - name: BUILDKITD_FLAGS
              value: --oci-worker-no-process-sandbox --oci-worker-gc=false
          command:
            - sh
            - -c
          args:
            - |
              buildctl-daemonless.sh build \
                --no-cache \
                --progress plain \
                --frontend dockerfile.v0 \
                --local context=/workspace \
                --local dockerfile=/workspace/client \
                --output type=image,name=${repository_client}:latest,push=true
          securityContext:
            seccompProfile:
              type: Unconfined
            appArmorProfile:
              type: Unconfined
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
              readOnly: true
            - name: buildkitd-client
              mountPath: /home/user/.local/share/buildkit
            - name: docker-auth
              mountPath: /home/user/.docker
              readOnly: true
        - name: buildkit-server
          image: docker.io/moby/buildkit:master-rootless
          env:
            - name: BUILDKITD_FLAGS
              value: --oci-worker-no-process-sandbox --oci-worker-gc=false
          command:
            - sh
            - -c
          args:
            - |
              buildctl-daemonless.sh build \
                --no-cache \
                --progress plain \
                --frontend dockerfile.v0 \
                --local context=/workspace \
                --local dockerfile=/workspace/server \
                --output type=image,name=${repository_server}:latest,push=true
          securityContext:
            seccompProfile:
              type: Unconfined
            appArmorProfile:
              type: Unconfined
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
              readOnly: true
            - name: buildkitd-server
              mountPath: /home/user/.local/share/buildkit
            - name: docker-auth
              mountPath: /home/user/.docker
              readOnly: true
      volumes:
        - name: workspace
          emptyDir: {}
        - name: buildkitd-client
          emptyDir: {}
        - name: buildkitd-server
          emptyDir: {}
        - name: docker-auth
          emptyDir: {}
